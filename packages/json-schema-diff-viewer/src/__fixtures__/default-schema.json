{
  "title": "User",
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "const": "Constant name",
      "examples": [
        "Example name",
        "Different name",
        "Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
      ],
      "description": "The user's full name. This description can be long and should truncate once it reaches the end of the row. If it's not truncating then theres and issue that needs to be fixed. Help!"
    },
    "age": {
      "type": "number",
      "minimum": 10,
      "maximum": 40,
      "multipleOf": 10,
      "x-netckacker": "qqwertyui",
      "default": 20,
      "enum": [
        10,
        20,
        30
      ],
      "readOnly": true
    },
    "completed_at": {
      "type": "string",
      "format": "date-time",
      "writeOnly": true,
      "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
      "description": "* Completed At 1 \n * Completed At 1 \n * Completed At 1 "
    },
    "items": {
      "type": [
        "null",
        "array"
      ],
      "items": {
        "type": [
          "string",
          "number"
        ]
      },
      "minItems": 1,
      "maxItems": 4,
      "description": "This description can be long and should truncate once it reaches the end of the row. If it's not truncating then theres and issue that needs to be fixed. Help!"
    },
    "email": {
      "type": "string",
      "format": "email",
      "deprecated": true,
      "default": "default@email.com",
      "minLength": 2
    },
    "plan": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "foo": {
              "type": "string"
            },
            "bar": {
              "type": "string"
            },
            "baz": {
              "type": "string"
            }
          },
          "deprecated": false,
          "example": "hi",
          "description": "- Plan! \n - Plan!",
          "required": [
            "foo",
            "bar"
          ]
        },
        {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      ]
    },
    "permissions": {
      "type": [
        "string",
        "object"
      ],
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "ref": {
      "$ref": "#/properties/permissions"
    },
    "foo": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/properties/bar"
          }
        }
      }
    },
    "bar": {
      "$ref": "#/properties/baz"
    },
    "baz": {
      "$ref": "#/properties/foo"
    }
  },
  "patternProperties": {
    "^id_": {
      "type": "number"
    },
    "foo": {
      "type": "integer"
    },
    "_name$": {
      "type": "string"
    }
  },
  "required": [
    "name",
    "age",
    "completed_at"
  ]
}
