"use strict";(self.webpackChunk_netcracker_qubership_apihub_apispec_view=self.webpackChunk_netcracker_qubership_apihub_apispec_view||[]).push([[969],{"./src/web-components/__stories__/helpers/getMergedDocument.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.getCompareResult=void 0,exports.getCopyWithEmptyPaths=function getCopyWithEmptyPaths(document){const{paths,...rest}=document;return rest.paths={},rest},exports.getMergedDocument=void 0,exports.normalizeOpenApiDocument=normalizeOpenApiDocument,exports.removeComponents=removeComponents;var _qubershipApihubApiUnifier=__webpack_require__("../../node_modules/@netcracker/qubership-apihub-api-unifier/dist/index.cjs.js"),_qubershipApihubApiDiff=__webpack_require__("../../node_modules/@netcracker/qubership-apihub-api-diff/dist/index.cjs.js"),_json=__webpack_require__("../../node_modules/@stoplight/json/index.es.js"),_diffBlock=__webpack_require__("../diff-block/src/index.ts");const NORMALIZE_OPTIONS={validate:!0,liftCombiners:!0,syntheticTitleFlag:Symbol("synthetic-title"),unify:!0,allowNotValidSyntheticChanges:!0};exports.getMergedDocument=(before,after)=>!before&&after?normalizeOpenApiDocument(removeComponents(after),after):before&&!after?normalizeOpenApiDocument(removeComponents(before),before):before&&after?getCompareResult(before,after).merged:null;const getCompareResult=(before,after)=>{const beforeOperation=removeComponents(before),afterOperation=removeComponents(after),compareResult=(0,_qubershipApihubApiDiff.apiDiff)(beforeOperation,afterOperation,{...NORMALIZE_OPTIONS,beforeSource:before,afterSource:after,mode:_qubershipApihubApiDiff.COMPARE_MODE_OPERATION,metaKey:_diffBlock.diffMetaKey,onRefResolveError:(message,path,ref)=>{console.debug(["[ASV] [Ref Resolve Error]",`Message: ${message}`,`JSON path: ${path}`,`Ref: ${ref}`].join("\n"))},onMergeError:(message,path,values)=>{console.debug(["[ASV] [Merge Error]",`Message: ${message}`,`JSON path: ${path}`,`Values: ${(0,_json.safeStringify)(values)}`].join("\n"))},onUnifyError:(message,path,value,cause)=>{console.debug(["[ASV] [Unify Error]",`Message: ${message}`,`JSON path: ${path}`,`Values: ${(0,_json.safeStringify)(value)}`,`Cause: ${cause}`].join("\n"))},onValidateError:(message,path,value,cause)=>{console.debug(["[ASV] [Validate Error]",`Message: ${message}`,`JSON path: ${path}`,`Values: ${(0,_json.safeStringify)(value)}`,`Cause: ${cause}`].join("\n"))}});return isObject(compareResult.merged)&&(compareResult.merged.toJSON=()=>(0,_qubershipApihubApiUnifier.stringifyCyclicJso)(compareResult.merged)),compareResult};function removeComponents(source){if(source&&"components"in source){const{components,...rest}=source;return isObject(components)&&"securitySchemes"in components?{...rest,components:{securitySchemes:components.securitySchemes}}:rest}return source}function normalizeOpenApiDocument(operation,source){const normalizedSource=(0,_qubershipApihubApiUnifier.normalize)(operation,{source,...NORMALIZE_OPTIONS}),mergedSource=(0,_qubershipApihubApiUnifier.denormalize)(normalizedSource,NORMALIZE_OPTIONS);return isObject(mergedSource)&&(mergedSource.toJSON=()=>(0,_qubershipApihubApiUnifier.stringifyCyclicJso)(mergedSource)),mergedSource}function isObject(maybeObject){return null!=maybeObject&&"object"==typeof maybeObject}exports.getCompareResult=getCompareResult},"./src/web-components/__stories__/OperationApi.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.SpecWithComplexRefs=exports.SimpleOperationSimpleMode=exports.SimpleOperation=exports.RequestBodyNoAdditionalProperties=exports.OperationWithoutHeading=exports.OperationWithParametersOneSchemaAnotherContent=exports.ApiAuthLocalBefore=exports.ApiAuthLocalAfter=void 0,__webpack_require__("./src/web-components/index.ts");var _qubershipApihubApispecViewSamples=__webpack_require__("../samples/src/index.ts"),_OperationAPI=__webpack_require__("./src/containers/OperationAPI.tsx"),_getMergedDocument=__webpack_require__("./src/web-components/__stories__/helpers/getMergedDocument.ts"),React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("../../node_modules/react/index.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const Template=props=>React.createElement(_OperationAPI.OperationAPIImpl,_extends({},props,{proxyServer:JSON.stringify(props.proxyServer)}));exports.default={title:"web-components/OperationAPI",argTypes:{operation:{control:"text"},layout:{control:{type:"inline-radio",options:["sidebar","stacked","partial"]},defaultValue:"sidebar"},router:{control:{type:"inline-radio",options:["history","memory","hash","static"]},defaultValue:"history"},selectedNodeUri:{control:"text",defaultValue:"/"},searchPhrase:{control:"text"},schemaViewMode:{control:{type:"inline-radio",options:["simple","detailed"]},defaultValue:void 0}}};const SimpleOperation=exports.SimpleOperation=Template.bind({});SimpleOperation.args={mergedDocument:(0,_getMergedDocument.getMergedDocument)(_qubershipApihubApispecViewSamples.simpleOperation,void 0)},SimpleOperation.storyName="Simple Operation";const SimpleOperationSimpleMode=exports.SimpleOperationSimpleMode=Template.bind({});SimpleOperationSimpleMode.args={mergedDocument:(0,_getMergedDocument.getMergedDocument)(_qubershipApihubApispecViewSamples.simpleOperation,void 0),schemaViewMode:"simple"},SimpleOperationSimpleMode.storyName="Simple Operation (Simple Mode)";const ApiAuthLocalBefore=exports.ApiAuthLocalBefore=Template.bind({});ApiAuthLocalBefore.args={mergedDocument:(0,_getMergedDocument.getMergedDocument)(_qubershipApihubApispecViewSamples.apiAuthLocalBefore,void 0),proxyServer:{url:"test-proxy-url",description:"Custom url"},hideExamples:!0},ApiAuthLocalBefore.storyName="Api Auth Local Before";const ApiAuthLocalAfter=exports.ApiAuthLocalAfter=Template.bind({});ApiAuthLocalAfter.args={mergedDocument:(0,_getMergedDocument.getMergedDocument)(_qubershipApihubApispecViewSamples.apiAuthLocalAfter,void 0)},ApiAuthLocalAfter.storyName="Api Auth Local After";const OperationWithoutHeading=exports.OperationWithoutHeading=Template.bind({});OperationWithoutHeading.args={mergedDocument:(0,_getMergedDocument.getMergedDocument)(_qubershipApihubApispecViewSamples.simpleOperation,void 0),noHeading:!0},OperationWithoutHeading.storyName="Operation without Heading";const SpecWithComplexRefs=exports.SpecWithComplexRefs=Template.bind({});SpecWithComplexRefs.args={mergedDocument:(0,_getMergedDocument.getMergedDocument)(_qubershipApihubApispecViewSamples.specWithComplexRefs,void 0),noHeading:!0},SpecWithComplexRefs.storyName="Spec with Complex Refs";const OperationWithParametersOneSchemaAnotherContent=exports.OperationWithParametersOneSchemaAnotherContent=Template.bind({});OperationWithParametersOneSchemaAnotherContent.args={mergedDocument:(0,_getMergedDocument.getMergedDocument)({openapi:"3.0.2",paths:{"/test":{post:{summary:"Test",description:"Description for Test",parameters:[{name:"simple",in:"query",schema:{type:"number",description:"Number param"}},{name:"complex",in:"query",content:{"application/json":{schema:{type:"string",description:"String param"}}}}]}}}},void 0)},OperationWithParametersOneSchemaAnotherContent.storyName="Operation with 2 params. 1st with schema, 2nd with content";(exports.RequestBodyNoAdditionalProperties=Template.bind({})).args={mergedDocument:(0,_getMergedDocument.getMergedDocument)({openapi:"3.0.2",paths:{"/test":{post:{requestBody:{content:{"application/json":{schema:{type:"object",properties:{prop1:{type:"string"},prop2:{type:"string"}},additionalProperties:!1}}}}}}}},void 0)},module.exports.__namedExportsOrder=["SpecWithComplexRefs","SimpleOperationSimpleMode","SimpleOperation","RequestBodyNoAdditionalProperties","OperationWithoutHeading","OperationWithParametersOneSchemaAnotherContent","ApiAuthLocalBefore","ApiAuthLocalAfter"]}}]);